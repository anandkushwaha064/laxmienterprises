services:

  mysql-dev:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: LaxmiEnterprises

    ports:
      - "13306:3306"
    expose:
      - 3306
    volumes:
      - ./mysql_data_new:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot_passsword"]
      interval: 10s        # Time between health checks
      timeout: 5s          # Time before health check fails
      retries: 5           # Number of retries before marking the container unhealthy
      start_period: 0s    # Time before health checks start
    networks:
      - internal

  backend-dev:
    build:
      context: backend
      dockerfile: Dockerfile
    logging:
      driver: json-file
    # command: bash start.sh
    # command: sleep infinity
    entrypoint: bash /backend/start.sh
    volumes:
      - ./backend:/backend
      - ./shared-dev/migrations:/backend/migrations
      - ./shared-dev/inits:/backend/inits
    environment:
      - PYTHONUNBUFFERED=1
      - MYSQLHOST=mysql-dev
      - DEBUG=True
    expose:
      - "8000"
    ports:
      - "8000:8000"
    depends_on:
      mysql-dev:
        condition: service_healthy
    networks:
     - internal
    restart: always    

  front-dev:
    build:
      context: front
      dockerfile: Dockerfile-Dev
    ports:
    - "4200:4200"
    - "8443:433"
    privileged: true
    volumes:
      - ./front:/front
      - ./shared-dev/apache-conf/metadata:/front/apache-conf/metadata
      - ./front/apache-conf/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./front/apache-conf/openidc.conf:/usr/local/apache2/conf/openidc.conf
      - ./front/apache-conf/paths.conf:/usr/local/apache2/conf/paths.conf
      - ./front/apache-conf/mod_auth_openidc.so:/usr/local/apache2/modules/mod_auth_openidc.so
    working_dir: /front
    # entrypoint: bash /front/start_dev.sh
    entrypoint: sleep infinity & ng serve --host 0.0.0.0
    networks:
      - internal
    restart: always

networks:
  internal:
    driver: "bridge"
